// this is a comment, and it is here to help you!


params.executionTimestamp = new java.text.SimpleDateFormat("yyyy_MM_dd_HH_mm_ss").format(new Date())

// Input file
params.targetSequences  = "$launchDir/example.fasta"

params.type             = 'nuc' // can also be 'aa'
params.filterValid      = false //'identifierOfAnIvalidSequence'
params.qc               = false // --qc only removes empty columns, --qc '0.8' removes columns with less then 80% occupancy

// Conda environment path (type in terminal: conda env list)
params.condaEnvPath     = '/Users/me/miniconda3/envs/my_env'

// Data reduction
params.clustering       = false
params.relabel          = false

// Alignment and tree building
params.alignSequences   = false

params.buildTree        = false
params.buildTreeEvo     = false //use this for ancestral sequence reconstruction

// Available predictors:
    //bio2byt tools
params.dynamine         = true
params.efoldmine        = false
params.disomine         = false
params.agmata           = false

    //structure
params.fetchStructures  = false

    //evolutinary pressure
params.outGroup         = false //'partialLabelOutGroup'
params.eteEvol          = false     
params.csubst           = false 
params.branchIds        = false //'1,2,3'

// Output files
params.plotBiophysicalFeatures = false
params.selectedProteins = false //'partialLabel1,partialLabel2'
params.buildLogo               = false
params.plotTree                = false


//If you want to run without docker on your local HPC, adapt the modules! It may be usefule to comment out the container line, too.
process {

    conda = params.condaEnvPath
        
    withName: 'predictBiophysicalFeatures' {
        container   = 'quay.io/biocontainers/b2btools:3.0.5--pyhdfd78af_0'
    }

    withName: 'buildMultipleSequenceAlignmentNuc' {
        label       = 'bigboy'
        container   = 'reslp/macse:2.05'
        //module    = 'MAFFT/7.505-GCC-11.3.0-with-extensions' 
    }

    withName: 'buildMultipleSequenceAlignmentAA' {
        label       = 'bigboy'
        container   = 'biocontainers/clustal-omega:v1.2.1_cv5'
    }
    
    withName: 'takeMultipleSequenceAlignment' {
        container   = 'quay.io/biocontainers/b2btools:3.0.5--pyhdfd78af_0'
    }

    withName: 'takeMultipleSequenceAlignmentNuc' {
        container   = 'quay.io/biocontainers/b2btools:3.0.5--pyhdfd78af_0'
    }
    
    withName: 'buildPhylogeneticTree' {
        label       = 'bigboy'
        container   = 'reslp/iqtree:2.0.7'
        // module   = 'FastTree/2.1.11-GCCcore-11.3.0'
    }

    withName: 'buildPhylogeneticTreeEvol' {
        label       = 'bigboy'
        container   = 'reslp/iqtree:2.0.7'
    }

    withName: 'buildLogo' {
        container   = 'quay.io/biocontainers/weblogo:3.7.9--pyhdfd78af_0'
    }

    withName: 'plotBiophysicalFeatures' {
        container   = 'quay.io/biocontainers/b2btools:3.0.5--pyhdfd78af_0'
    }
    
    withName: 'findRoot' {
        container   = 'slheidig/csubst'
    } 
    
    withName: 'runCsubst' {
        label       = 'tinysnail'
        container   = 'slheidig/csubst'
    }
    
    withName: 'runCsubstBranch' {
        label       = 'tinysnail'
        container   = 'slheidig/csubst'
    }

    withName:cdHitClustering{
        container   = 'chrishah/cdhit:v4.8.1'
        //module    = 'CD-HIT/4.8.1-GCC-11.3.0'
    }

    withName: 'postClusteringLabels' {
        container   = 'slheidig/csubst'
    }

    withName:plotPhylogeneticTree{
        container   = 'slheidig/ad_ete3'
    }

    withName:runEteEvol{
        label       = 'tinysnail'
        container   = 'slheidig/ad_ete3'
    }
    
}

profiles {
    standard {
        process {
            executor = 'local'

            withLabel: tinysnail {
                cpus = '2'
                memory = '4.GB'
            }

            withLabel: bigboy {
                cpus = '8'
                memory = '8GB'
            }
        }
    }

    hydra {
        process {
            executor = 'slurm'
            cpus ='2'
            memory ='4 GB'
            time ='1h'
            //clusterOptions '--mail-type=ALL'
            NXF_SINGULARITY_CACHEDIR = '$VSC_SCRATCH_VO/.apptainer'

            withLabel: tinysnail {
                cpus = '2'
                memory = '4.GB'
                time ='10h'
            }

            withLabel: bigboy {
                cpus = '10'
                memory = '8GB'
                time ='10h'
                clusterOptions ='--mail-type=ALL'
            }
        
        }
    }

    withdocker {
        docker.enabled = true
        singularity.enabled = false

        docker.temp = 'auto'
    }

    withsingularity {
        docker.enabled = false
        singularity.enabled = true
        //tell BioEnvAda where all your other singularity images are to avoid duplication
        //singularity.cacheDir = "$VSC_SCRATCH_VO/.apptainer"

        singularity.runOptions = "-B /run"
    }


    withconda {
        conda.enabled = true
    }
}
